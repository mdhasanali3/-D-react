{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","containers/robots.js","components/Scroll.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","name","email","id","class","alt","src","Math","random","Cardlist","robots","map","user","i","key","SearchBox","searchfield","searchchange","className","type","placeholder","onChange","username","Scroll","props","style","overflowY","border","height","children","App","onsearchchange","event","setState","target","value","state","this","filterrobots","filter","robot","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sNAuBeA,EArBH,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GAE1B,OACA,yBAAKC,MAAM,wDAEX,yBAAKC,IAAI,QAAQC,IAAG,+BAA0BC,KAAKC,QAAQ,GAAG,IAA1C,OACpB,6BACA,4BAAKL,GACD,gCAAMF,EAAN,KACJ,2BAAIC,MCaWO,EAtBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAKjB,OAEI,6BACFA,EAAOC,KAAI,SAACC,EAAKC,GACX,OAAS,kBAAC,EAAD,CACTC,IAAKD,EACJV,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAEhBC,MAAOQ,EAAOG,GAAGX,aCIXa,EAlBC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAE9B,OACI,yBAAKC,UAAU,OAEX,2BAAOA,UAAU,oCACjBC,KAAK,SACRC,YAAY,gBACjBC,SAAUJ,MCVGP,EAAS,CACpB,CACEP,GAAI,EACJF,KAAM,gBACNqB,SAAU,OACVpB,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,eACNqB,SAAU,YACVpB,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,mBACNqB,SAAU,WACVpB,MAAO,sBAET,CACEC,GAAI,EACJF,KAAM,mBACNqB,SAAU,WACVpB,MAAO,6BAET,CACEC,GAAI,EACJF,KAAM,mBACNqB,SAAU,SACVpB,MAAO,4BAET,CACEC,GAAI,EACJF,KAAM,uBACNqB,SAAU,mBACVpB,MAAO,2BAET,CACEC,GAAI,EACJF,KAAM,kBACNqB,SAAU,eACVpB,MAAO,0BAET,CACEC,GAAI,EACJF,KAAM,2BACNqB,SAAU,gBACVpB,MAAO,wBAET,CACEC,GAAI,EACJF,KAAM,kBACNqB,SAAU,WACVpB,MAAO,2BAET,CACEC,GAAI,GACJF,KAAM,qBACNqB,SAAU,iBACVpB,MAAO,2BC/BIqB,G,MAxBF,SAACC,GAEd,OACA,yBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBACvCC,OAAO,UAEFJ,EAAMK,YC0CIC,E,kDA3CX,aAAc,IAAD,8BACT,gBAOJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACjB,YAAagB,EAAME,OAAOC,SAPzC,EAAKC,MAAM,CACf1B,OAAOA,EACPM,YAAY,IAJC,E,qDAeR,IAAD,EACsBqB,KAAKD,MAAzB1B,EADF,EACEA,OAAOM,EADT,EACSA,YAENsB,EAAa5B,EAAO6B,QAAO,SAAAC,GAC1B,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS1B,EAAYyB,kBAE9D,OAEK,yBAAKvB,UAAU,MAGf,wBAAIA,UAAU,MAAd,iBACR,kBAAC,EAAD,CAAWD,aAAcoB,KAAKN,iBACtB,kBAAC,EAAD,KAEI,kBAAC,EAAD,CAAUrB,OAAQ4B,U,GA/BZK,a,MCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACD,kBAAC,EAAD,OAGCC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4fce2016.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card =({name, email,id})=>{\r\n    \r\nreturn(\r\n<div class=' tc bg-light-green dit br3 pa3 ma3 grow bw2 shadow-5'>\r\n\r\n<img alt='robot' src={`https://robohash.org/${Math.random(-12,12)} ` } />\r\n<div>\r\n<h4>{id}</h4>\r\n    <h2> {name} </h2>\r\n<p>{email}</p>\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n)\r\n\r\n}\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\nconst Cardlist=({robots})=>{\r\n\r\n   // const cardcomponent=\r\n\r\n\r\nreturn(\r\n\r\n    <div>\r\n {robots.map((user,i)=>{\r\n        return ( <Card \r\n        key={i}\r\n         id={robots[i].id} \r\n         name={robots[i].name} \r\n         \r\n         email={robots[i].email}  />\r\n                )\r\n    })}\r\n  </div>\r\n)\r\n\r\n\r\n}\r\nexport default Cardlist\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst SearchBox=({searchfield,searchchange})=>{\r\n\r\nreturn(\r\n    <div className='pa2'>\r\n\r\n        <input className='pa3 ba b--green bg-lightest-blue '\r\n        type='search'\r\n     placeholder='search robots' \r\nonChange={searchchange}\r\n\r\n     />\r\n    </div>\r\n    \r\n\r\n)\r\n\r\n\r\n}\r\nexport default SearchBox \r\n\r\n\r\n\r\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React from 'react'\r\n\r\n\r\n\r\nconst Scroll=(props)=>{\r\n\r\nreturn (\r\n<div style={{overflowY:'scroll',border:'5px solid black',\r\nheight:'450px'}}>\r\n\r\n    {props.children}\r\n</div>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Scroll","import React,{Component} from 'react'\r\nimport Cardlist from '../components/Cardlist'\r\nimport SearchBox from '../components/SearchBox'\r\nimport {robots} from './robots'\r\nimport './app.css'\r\nimport Scroll from '../components/Scroll'\r\n \r\n\r\nclass App extends Component{\r\n    constructor(){ \r\n        super()   \r\n        this.state={ \r\n    robots:robots,\r\n    searchfield:''\r\n}\r\n    } \r\n\r\n    onsearchchange=(event)=>{\r\n        this.setState({searchfield: event.target.value })\r\n       // console.log(event.target.value)\r\n       \r\n       // console.log(filterrobots)\r\n    }\r\n\r\nrender(){\r\n    const{robots,searchfield}=this.state\r\n\r\n     const filterrobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n   return(\r\n\r\n        <div className='tc'> \r\n\r\n            \r\n        <h1 className='f1'> Robo Friends</h1>\r\n<SearchBox searchchange={this.onsearchchange} />\r\n        <Scroll>\r\n\r\n            <Cardlist robots={filterrobots} />\r\n\r\n        </Scroll>  \r\n        \r\n        </div>\r\n\r\n\r\n    ) \r\n}\r\n    \r\n\r\n}\r\n\r\nexport default App\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card'\n//import {robots} from './robots.js'\n import App from './containers/App'\nimport 'tachyons'\n\n \nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n <App/>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n  "],"sourceRoot":""}